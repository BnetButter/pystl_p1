services:
  # --- CORE SERVICES -- #
  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  server:
    build:
      context: ./server
    container_name: django_app
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./server:/app
      - media:/media
    environment:
      - DEBUG=1
      - DATABASE_NAME=mydatabase
      - DATABASE_USER=myuser
      - DATABASE_PASSWORD=mypassword
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    depends_on:
      - db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # AMQP protocol
      - "15672:15672"  # Web management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    
  nginx:
    image: nginx:latest
    ports:
      - 1080:80
      - 443:443
    volumes:
      - ./nginx/selfsigned.crt:/etc/ssl/certs/selfsigned.crt
      - ./nginx/selfsigned.key:/etc/ssl/private/selfsigned.key
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
      - server
      - db
      - grafana
  web:
    build:
      context: ./web
    working_dir: /app
    volumes:
      - ./web/src:/app/src
      - ./web/public:/app/public
      - ./web/index.html:/app/index.html
    command: npm run dev
    stdin_open: true
    tty: true

  # -- Monitoring -- #
  flower:
    build:
      context: ./flower
    command: celery --broker=amqp://guest:guest@rabbitmq:5672// flower
    ports:
      - 5555:5555

  # -- WORKERS -- #
  mock-worker:
    build:
      context: ./server/api/workers/mock
    volumes:
      - ./server/api/workers/mock:/app
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      WEBHOOK_ENDPOINT: "http://server:8000/services/api/worker/webhook/"
  
  aecif-worker:
    build:
      context: ./server/api/workers/AECIF_NET
    volumes:
      - ./server/api/workers/AECIF_NET:/app
      - media:/media
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      WEBHOOK_ENDPOINT: "http://server:8000/services/api/worker/webhook/"
    
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            count: 1
            capabilities: [gpu]
    
  # --- MONITORS --- #
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
  # --- export host CPU/MEM usage --- #
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    pid: host
    volumes:
      - /:/host:ro
    command:
      - '--path.rootfs=/host'
  # -- exports docker usage -- #
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
  

volumes:
  postgres_data:
  media:
  grafana-storage:

